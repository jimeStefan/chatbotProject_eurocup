{"version":3,"file":"cognitiveservices-luis-runtime.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/predictionOperationsMappers.ts","../src/models/parameters.ts","../src/operations/predictionOperations.ts","../src/operations/index.ts","../src/lUISRuntimeClientContext.ts","../src/lUISRuntimeClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n * \n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Represents an intent prediction.\n */\nexport interface Intent {\n  /**\n   * The score of the fired intent.\n   */\n  score?: number;\n  /**\n   * The prediction of the dispatched application.\n   */\n  childApp?: Prediction;\n}\n\n/**\n * The result of the sentiment analysis.\n */\nexport interface Sentiment {\n  /**\n   * The label of the sentiment analysis result.\n   */\n  label?: string;\n  /**\n   * The sentiment score of the query.\n   */\n  score: number;\n}\n\n/**\n * Represents the prediction of a query.\n */\nexport interface Prediction {\n  /**\n   * The query after spell checking. Only set if spell check was enabled and a spelling mistake was\n   * found.\n   */\n  alteredQuery?: string;\n  /**\n   * The name of the top scoring intent.\n   */\n  topIntent: string;\n  /**\n   * A dictionary representing the intents that fired.\n   */\n  intents: { [propertyName: string]: Intent };\n  /**\n   * A dictionary representing the entities that fired.\n   */\n  entities: { [propertyName: string]: any };\n  /**\n   * The result of the sentiment analysis.\n   */\n  sentiment?: Sentiment;\n}\n\n/**\n * Represents the prediction response.\n */\nexport interface PredictionResponse {\n  /**\n   * The query used in the prediction.\n   */\n  query: string;\n  /**\n   * The prediction of the requested query.\n   */\n  prediction: Prediction;\n}\n\n/**\n * Represents the definition of the error that occurred.\n */\nexport interface ErrorBody {\n  /**\n   * The error code.\n   */\n  code: string;\n  /**\n   * The error message.\n   */\n  message: string;\n}\n\n/**\n * Represents the error that occurred.\n */\nexport interface ErrorModel {\n  error: ErrorBody;\n}\n\n/**\n * The custom options for the prediction request.\n */\nexport interface PredictionRequestOptions {\n  /**\n   * The reference DateTime used for predicting datetime entities.\n   */\n  datetimeReference?: Date;\n  /**\n   * Whether to make the external entities resolution override the predictions if an overlap\n   * occurs.\n   */\n  preferExternalEntities?: boolean;\n}\n\n/**\n * Defines a user predicted entity that extends an already existing one.\n */\nexport interface ExternalEntity {\n  /**\n   * The name of the entity to extend.\n   */\n  entityName: string;\n  /**\n   * The start character index of the predicted entity.\n   */\n  startIndex: number;\n  /**\n   * The length of the predicted entity.\n   */\n  entityLength: number;\n  /**\n   * A user supplied custom resolution to return as the entity's prediction.\n   */\n  resolution?: any;\n  /**\n   * A user supplied score to return as the entity's prediction score.\n   */\n  score?: number;\n}\n\n/**\n * Defines a sub-list to append to an existing list entity.\n */\nexport interface RequestList {\n  /**\n   * The name of the sub-list.\n   */\n  name?: string;\n  /**\n   * The canonical form of the sub-list.\n   */\n  canonicalForm: string;\n  /**\n   * The synonyms of the canonical form.\n   */\n  synonyms?: string[];\n}\n\n/**\n * Defines an extension for a list entity.\n */\nexport interface DynamicList {\n  /**\n   * The name of the list entity to extend.\n   */\n  listEntityName: string;\n  /**\n   * The lists to append on the extended list entity.\n   */\n  requestLists: RequestList[];\n}\n\n/**\n * Represents the prediction request parameters.\n */\nexport interface PredictionRequest {\n  /**\n   * The query to predict.\n   */\n  query: string;\n  /**\n   * The custom options defined for this request.\n   */\n  options?: PredictionRequestOptions;\n  /**\n   * The externally predicted entities for this request.\n   */\n  externalEntities?: ExternalEntity[];\n  /**\n   * The dynamically created list entities for this request.\n   */\n  dynamicLists?: DynamicList[];\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PredictionGetVersionPredictionOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Indicates whether to get extra metadata for the entities predictions or not.\n   */\n  verbose?: boolean;\n  /**\n   * Indicates whether to return all the intents in the response or just the top intent.\n   */\n  showAllIntents?: boolean;\n  /**\n   * Indicates whether to log the endpoint query or not.\n   */\n  log?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PredictionGetSlotPredictionOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Indicates whether to get extra metadata for the entities predictions or not.\n   */\n  verbose?: boolean;\n  /**\n   * Indicates whether to return all the intents in the response or just the top intent.\n   */\n  showAllIntents?: boolean;\n  /**\n   * Indicates whether to log the endpoint query or not.\n   */\n  log?: boolean;\n}\n\n/**\n * Contains response data for the getVersionPrediction operation.\n */\nexport type PredictionGetVersionPredictionResponse = PredictionResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PredictionResponse;\n    };\n};\n\n/**\n * Contains response data for the getSlotPrediction operation.\n */\nexport type PredictionGetSlotPredictionResponse = PredictionResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PredictionResponse;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const Intent: msRest.CompositeMapper = {\n  serializedName: \"Intent\",\n  type: {\n    name: \"Composite\",\n    className: \"Intent\",\n    modelProperties: {\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      childApp: {\n        serializedName: \"childApp\",\n        type: {\n          name: \"Composite\",\n          className: \"Prediction\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sentiment: msRest.CompositeMapper = {\n  serializedName: \"Sentiment\",\n  type: {\n    name: \"Composite\",\n    className: \"Sentiment\",\n    modelProperties: {\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      score: {\n        required: true,\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Prediction: msRest.CompositeMapper = {\n  serializedName: \"Prediction\",\n  type: {\n    name: \"Composite\",\n    className: \"Prediction\",\n    modelProperties: {\n      alteredQuery: {\n        serializedName: \"alteredQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      topIntent: {\n        required: true,\n        serializedName: \"topIntent\",\n        type: {\n          name: \"String\"\n        }\n      },\n      intents: {\n        required: true,\n        serializedName: \"intents\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"Intent\"\n            }\n          }\n        }\n      },\n      entities: {\n        required: true,\n        serializedName: \"entities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Object\"\n            }\n          }\n        }\n      },\n      sentiment: {\n        serializedName: \"sentiment\",\n        type: {\n          name: \"Composite\",\n          className: \"Sentiment\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionResponse: msRest.CompositeMapper = {\n  serializedName: \"PredictionResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"PredictionResponse\",\n    modelProperties: {\n      query: {\n        required: true,\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prediction: {\n        required: true,\n        serializedName: \"prediction\",\n        type: {\n          name: \"Composite\",\n          className: \"Prediction\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorBody: msRest.CompositeMapper = {\n  serializedName: \"ErrorBody\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorBody\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      error: {\n        required: true,\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionRequestOptions: msRest.CompositeMapper = {\n  serializedName: \"PredictionRequestOptions\",\n  type: {\n    name: \"Composite\",\n    className: \"PredictionRequestOptions\",\n    modelProperties: {\n      datetimeReference: {\n        serializedName: \"datetimeReference\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      preferExternalEntities: {\n        serializedName: \"preferExternalEntities\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExternalEntity: msRest.CompositeMapper = {\n  serializedName: \"ExternalEntity\",\n  type: {\n    name: \"Composite\",\n    className: \"ExternalEntity\",\n    modelProperties: {\n      entityName: {\n        required: true,\n        serializedName: \"entityName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startIndex: {\n        required: true,\n        serializedName: \"startIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      entityLength: {\n        required: true,\n        serializedName: \"entityLength\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      resolution: {\n        serializedName: \"resolution\",\n        type: {\n          name: \"Object\"\n        }\n      },\n      score: {\n        serializedName: \"score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RequestList: msRest.CompositeMapper = {\n  serializedName: \"RequestList\",\n  type: {\n    name: \"Composite\",\n    className: \"RequestList\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      canonicalForm: {\n        required: true,\n        serializedName: \"canonicalForm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      synonyms: {\n        serializedName: \"synonyms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DynamicList: msRest.CompositeMapper = {\n  serializedName: \"DynamicList\",\n  type: {\n    name: \"Composite\",\n    className: \"DynamicList\",\n    modelProperties: {\n      listEntityName: {\n        required: true,\n        serializedName: \"listEntityName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestLists: {\n        required: true,\n        serializedName: \"requestLists\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RequestList\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PredictionRequest: msRest.CompositeMapper = {\n  serializedName: \"PredictionRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"PredictionRequest\",\n    modelProperties: {\n      query: {\n        required: true,\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"PredictionRequestOptions\"\n        }\n      },\n      externalEntities: {\n        serializedName: \"externalEntities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExternalEntity\"\n            }\n          }\n        }\n      },\n      dynamicLists: {\n        serializedName: \"dynamicLists\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DynamicList\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","/*\n  * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  DynamicList,\n  ErrorBody,\n  ErrorModel,\n  ExternalEntity,\n  Intent,\n  Prediction,\n  PredictionRequest,\n  PredictionRequestOptions,\n  PredictionResponse,\n  RequestList,\n  Sentiment\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const appId: msRest.OperationURLParameter = {\n  parameterPath: \"appId\",\n  mapper: {\n    required: true,\n    serializedName: \"appId\",\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const log: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"log\"\n  ],\n  mapper: {\n    serializedName: \"log\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const showAllIntents: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"showAllIntents\"\n  ],\n  mapper: {\n    serializedName: \"show-all-intents\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const slotName: msRest.OperationURLParameter = {\n  parameterPath: \"slotName\",\n  mapper: {\n    required: true,\n    serializedName: \"slotName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const verbose: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"verbose\"\n  ],\n  mapper: {\n    serializedName: \"verbose\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const versionId: msRest.OperationURLParameter = {\n  parameterPath: \"versionId\",\n  mapper: {\n    required: true,\n    serializedName: \"versionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n  * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/predictionOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { LUISRuntimeClientContext } from \"../lUISRuntimeClientContext\";\n\n/** Class representing a PredictionOperations. */\nexport class PredictionOperations {\n  private readonly client: LUISRuntimeClientContext;\n\n  /**\n   * Create a PredictionOperations.\n   * @param {LUISRuntimeClientContext} client Reference to the service client.\n   */\n  constructor(client: LUISRuntimeClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the predictions for an application version.\n   * @param appId The application ID.\n   * @param versionId The application version ID.\n   * @param predictionRequest The prediction request parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PredictionGetVersionPredictionResponse>\n   */\n  getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetVersionPredictionOptionalParams): Promise<Models.PredictionGetVersionPredictionResponse>;\n  /**\n   * @param appId The application ID.\n   * @param versionId The application version ID.\n   * @param predictionRequest The prediction request parameters.\n   * @param callback The callback\n   */\n  getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;\n  /**\n   * @param appId The application ID.\n   * @param versionId The application version ID.\n   * @param predictionRequest The prediction request parameters.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, options: Models.PredictionGetVersionPredictionOptionalParams, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;\n  getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetVersionPredictionOptionalParams | msRest.ServiceCallback<Models.PredictionResponse>, callback?: msRest.ServiceCallback<Models.PredictionResponse>): Promise<Models.PredictionGetVersionPredictionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        appId,\n        versionId,\n        predictionRequest,\n        options\n      },\n      getVersionPredictionOperationSpec,\n      callback) as Promise<Models.PredictionGetVersionPredictionResponse>;\n  }\n\n  /**\n   * Gets the predictions for an application slot.\n   * @param appId The application ID.\n   * @param slotName The application slot name.\n   * @param predictionRequest The prediction request parameters.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PredictionGetSlotPredictionResponse>\n   */\n  getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetSlotPredictionOptionalParams): Promise<Models.PredictionGetSlotPredictionResponse>;\n  /**\n   * @param appId The application ID.\n   * @param slotName The application slot name.\n   * @param predictionRequest The prediction request parameters.\n   * @param callback The callback\n   */\n  getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;\n  /**\n   * @param appId The application ID.\n   * @param slotName The application slot name.\n   * @param predictionRequest The prediction request parameters.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, options: Models.PredictionGetSlotPredictionOptionalParams, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;\n  getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetSlotPredictionOptionalParams | msRest.ServiceCallback<Models.PredictionResponse>, callback?: msRest.ServiceCallback<Models.PredictionResponse>): Promise<Models.PredictionGetSlotPredictionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        appId,\n        slotName,\n        predictionRequest,\n        options\n      },\n      getSlotPredictionOperationSpec,\n      callback) as Promise<Models.PredictionGetSlotPredictionResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getVersionPredictionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"apps/{appId}/versions/{versionId}/predict\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.appId,\n    Parameters.versionId\n  ],\n  queryParameters: [\n    Parameters.verbose,\n    Parameters.showAllIntents,\n    Parameters.log\n  ],\n  requestBody: {\n    parameterPath: \"predictionRequest\",\n    mapper: {\n      ...Mappers.PredictionRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getSlotPredictionOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"apps/{appId}/slots/{slotName}/predict\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.appId,\n    Parameters.slotName\n  ],\n  queryParameters: [\n    Parameters.verbose,\n    Parameters.showAllIntents,\n    Parameters.log\n  ],\n  requestBody: {\n    parameterPath: \"predictionRequest\",\n    mapper: {\n      ...Mappers.PredictionRequest,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredictionResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n","/*\n  * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nexport * from \"./predictionOperations\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-luis-runtime\";\nconst packageVersion = \"4.0.1\";\n\nexport class LUISRuntimeClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the LUISRuntimeClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}/luis/prediction/v3.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { LUISRuntimeClientContext } from \"./lUISRuntimeClientContext\";\n\nclass LUISRuntimeClient extends LUISRuntimeClientContext {\n  // Operation groups\n  prediction: operations.PredictionOperations;\n\n  /**\n   * Initializes a new instance of the LUISRuntimeClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n    this.prediction = new operations.PredictionOperations(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  LUISRuntimeClient,\n  LUISRuntimeClientContext,\n  Models as LUISRuntimeModels,\n  Mappers as LUISRuntimeMappers\n};\nexport * from \"./operations\";\n"],"names":["appId","versionId","slotName","msRest.Serializer","Parameters.endpoint","Parameters.appId","Parameters.versionId","Parameters.verbose","Parameters.showAllIntents","Parameters.log","Mappers.PredictionRequest","Mappers.PredictionResponse","Mappers.ErrorModel","Parameters.slotName","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.PredictionOperations"],"mappings":"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"}