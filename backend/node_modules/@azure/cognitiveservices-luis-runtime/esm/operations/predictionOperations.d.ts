import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { LUISRuntimeClientContext } from "../lUISRuntimeClientContext";
/** Class representing a PredictionOperations. */
export declare class PredictionOperations {
    private readonly client;
    /**
     * Create a PredictionOperations.
     * @param {LUISRuntimeClientContext} client Reference to the service client.
     */
    constructor(client: LUISRuntimeClientContext);
    /**
     * Gets the predictions for an application version.
     * @param appId The application ID.
     * @param versionId The application version ID.
     * @param predictionRequest The prediction request parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.PredictionGetVersionPredictionResponse>
     */
    getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetVersionPredictionOptionalParams): Promise<Models.PredictionGetVersionPredictionResponse>;
    /**
     * @param appId The application ID.
     * @param versionId The application version ID.
     * @param predictionRequest The prediction request parameters.
     * @param callback The callback
     */
    getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;
    /**
     * @param appId The application ID.
     * @param versionId The application version ID.
     * @param predictionRequest The prediction request parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    getVersionPrediction(appId: string, versionId: string, predictionRequest: Models.PredictionRequest, options: Models.PredictionGetVersionPredictionOptionalParams, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;
    /**
     * Gets the predictions for an application slot.
     * @param appId The application ID.
     * @param slotName The application slot name.
     * @param predictionRequest The prediction request parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.PredictionGetSlotPredictionResponse>
     */
    getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, options?: Models.PredictionGetSlotPredictionOptionalParams): Promise<Models.PredictionGetSlotPredictionResponse>;
    /**
     * @param appId The application ID.
     * @param slotName The application slot name.
     * @param predictionRequest The prediction request parameters.
     * @param callback The callback
     */
    getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;
    /**
     * @param appId The application ID.
     * @param slotName The application slot name.
     * @param predictionRequest The prediction request parameters.
     * @param options The optional parameters
     * @param callback The callback
     */
    getSlotPrediction(appId: string, slotName: string, predictionRequest: Models.PredictionRequest, options: Models.PredictionGetSlotPredictionOptionalParams, callback: msRest.ServiceCallback<Models.PredictionResponse>): void;
}
//# sourceMappingURL=predictionOperations.d.ts.map